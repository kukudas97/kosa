<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!--객체의 생성과 조립-->
<!-- id="" 객체의 이름 >> web에서는 url경로로 바뀜-->
<!-- 
1. Tomcat실행
2. 클라이언트 요청 hello.do...
3. spring에서 <url-pattern>*.do</url-pattern>설정에 따라서
	3.1 DispatcherServlet 객체 생성 >> KEY Spring이 DispatcherServlet 가지고 놀 수 있는 IOC컨테이너가 자동생성
	3.2 spring-servlet.xml read 해서 >> IOC컨테이너 안에 >> bean객체 생성 조립
	3.3  약속(*-servlet.xml)으로 >> spring-servlet.xml(이름을 만들때 web.xml에 servlet-name과 같다면 자동생성) 
4. 컨테이너 안에 객체가 생성되고 주입이 되어 있음
5. hello.do 에 대해서 handler mapping작업 >> 실행할 객체를 찾음 >> id="/hello.do" >> handleRequest함수 자동 실행
6. handleRequest return >> ModelAndView 객체 >> ViewResolver 조합 >> view리턴...

 -->
	
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
</beans>